// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
let tg = window.Telegram.WebApp;
tg.ready();
tg.expand();

// –ò–≥—Ä–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let rounds = 0;
let bestCoefficient = 0;
let clickCounter = 0;
let skipNextTurn = false;

// –≠–ª–µ–º–µ–Ω—Ç—ã DOM
const startScreen = document.getElementById('startScreen');
const gameScreen = document.getElementById('gameScreen');
const coefficientEl = document.getElementById('coefficient');
const messageEl = document.getElementById('message');
const roundsEl = document.getElementById('rounds');
const bestCoefEl = document.getElementById('bestCoef');
const actionBtn = document.getElementById('actionBtn');
const resultBox = document.getElementById('result');
const planeEl = document.getElementById('plane');

// –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
function startGame() {
    startScreen.classList.remove('active');
    gameScreen.classList.add('active');

    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ Telegram
    if (tg.HapticFeedback) {
        tg.HapticFeedback.impactOccurred('light');
    }
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—è–º–∏
function generateCoefficient() {
    const random = Math.random() * 100;

    if (random < 70) {
        // 70% - –û–±—ã—á–Ω—ã–µ (1.1-1.6)
        return {
            value: (Math.random() * 0.5 + 1.1).toFixed(2),
            message: "–ù–µ–ø–ª–æ—Ö–æ! üòä",
            type: "normal"
        };
    } else if (random < 88) {
        // 18% - –•–æ—Ä–æ—à–∏–µ (1.6-2.2)
        return {
            value: (Math.random() * 0.6 + 1.6).toFixed(2),
            message: "–û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! üéâ",
            type: "good"
        };
    } else if (random < 95) {
        // 7% - –†–µ–¥–∫–∏–µ (2.2-3.0)
        return {
            value: (Math.random() * 0.8 + 2.2).toFixed(2),
            message: "–†–µ–¥–∫–∞—è —É–¥–∞—á–∞! üåü",
            type: "rare"
        };
    } else {
        // 5% - –°—É–ø–µ—Ä —Ä–µ–¥–∫–∏–µ (3.0-5.2)
        return {
            value: (Math.random() * 2.2 + 3.0).toFixed(2),
            message: "–î–ñ–ï–ö–ü–û–¢! –¢–´ –í–ï–ó–£–ù–ß–ò–ö! üé∞üíé",
            type: "super-rare"
        };
    }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–ø—É—Å–∫–∞ —Ö–æ–¥–∞
function shouldSkipTurn() {
    clickCounter++;

    // –ö–∞–∂–¥—ã–µ 2-5 –∫–ª–∏–∫–æ–≤ —Å–ª—É—á–∞–π–Ω—ã–π —à–∞–Ω—Å –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ö–æ–¥
    if (clickCounter >= 2) {
        const skipChance = Math.random() * 100;
        if (skipChance < 20) { // 20% —à–∞–Ω—Å –ø–æ—Å–ª–µ 2-5 –∫–ª–∏–∫–æ–≤
            clickCounter = 0;
            return true;
        }
    }

    if (clickCounter >= 5) {
        clickCounter = 0;
    }

    return false;
}

// –ê–Ω–∏–º–∞—Ü–∏—è —Å–∞–º–æ–ª—ë—Ç–∏–∫–∞
function animatePlane() {
    return new Promise((resolve) => {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–∞–º–æ–ª—ë—Ç–∏–∫
        planeEl.setAttribute('opacity', '1');

        // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
        const animateMotion = planeEl.querySelector('animateMotion');
        animateMotion.beginElement();

        // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => {
            planeEl.setAttribute('opacity', '0');
            resolve();
        }, 1500);
    });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
function updateResult(coefficient, message, type) {
    // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∫–ª–∞—Å—Å—ã
    resultBox.className = 'result-box';
    messageEl.className = 'message';

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∫–ª–∞—Å—Å —Ç–∏–ø–∞
    resultBox.classList.add(type);

    if (type === 'skip') {
        messageEl.classList.add('skip');
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
    coefficientEl.textContent = coefficient;
    messageEl.textContent = message;

    // –¢—Ä–∏–≥–≥–µ—Ä–∏–º –∞–Ω–∏–º–∞—Ü–∏—é pulse
    coefficientEl.style.animation = 'none';
    setTimeout(() => {
        coefficientEl.style.animation = 'pulse 0.5s ease';
    }, 10);
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
function updateStats() {
    roundsEl.textContent = rounds;
    bestCoefEl.textContent = bestCoefficient.toFixed(2) + 'x';
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—É–Ω–¥–∞
async function playRound() {
    // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
    actionBtn.disabled = true;

    // –í–∏–±—Ä–∞—Ü–∏—è
    if (tg.HapticFeedback) {
        tg.HapticFeedback.impactOccurred('medium');
    }

    // –ê–Ω–∏–º–∞—Ü–∏—è —Å–∞–º–æ–ª—ë—Ç–∏–∫–∞
    await animatePlane();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–ø—É—Å–∫ —Ö–æ–¥–∞
    if (shouldSkipTurn()) {
        updateResult('‚ùå', '‚è≥ –û–∂–∏–¥–∞–π —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞—É–Ω–¥‚Ä¶', 'skip');

        if (tg.HapticFeedback) {
            tg.HapticFeedback.notificationOccurred('warning');
        }

        actionBtn.disabled = false;
        return;
    }

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const result = generateCoefficient();
    const coefValue = parseFloat(result.value);

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    rounds++;
    if (coefValue > bestCoefficient) {
        bestCoefficient = coefValue;
    }
    updateStats();

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    updateResult(result.value + 'x', result.message, result.type);

    // –í–∏–±—Ä–∞—Ü–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    if (tg.HapticFeedback) {
        if (result.type === 'super-rare') {
            tg.HapticFeedback.notificationOccurred('success');
        } else if (result.type === 'rare') {
            tg.HapticFeedback.notificationOccurred('success');
        } else {
            tg.HapticFeedback.impactOccurred('light');
        }
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Telegram (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    if (result.type === 'super-rare' || result.type === 'rare') {
        const data = JSON.stringify({
            coefficient: result.value,
            type: result.type,
            rounds: rounds
        });
        // tg.sendData(data); // –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç—É
    }

    // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
    actionBtn.disabled = false;
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–≤–µ—Ç–æ–≤–æ–π —Ç–µ–º—ã Telegram
if (tg.themeParams) {
    document.body.style.backgroundColor = tg.themeParams.bg_color || '#121212';
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
tg.onEvent('mainButtonClicked', () => {
    tg.close();
});

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ó–∞–∫—Ä—ã—Ç—å" –≤ Telegram
tg.MainButton.setText('–ó–∞–∫—Ä—ã—Ç—å');
tg.MainButton.show();
tg.MainButton.onClick(() => {
    tg.close();
});
